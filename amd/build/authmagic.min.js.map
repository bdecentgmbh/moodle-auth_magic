{"version":3,"file":"authmagic.min.js","sources":["../src/authmagic.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Magic authentication define js.\n * @module   auth_magic\n * @copyright  2023 bdecent gmbh <https://bdecent.de>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([], function() {\n\n    /**\n    * Controls Custom styles tool action.\n    * @param {object} params\n    */\n    var AuthMagic = function(params) {\n        var self = this;\n        if (params.loginhook) {\n            self.magicLoginHook(params);\n        }\n        return true;\n    };\n\n\n    AuthMagic.prototype.getMagicLink = function(params, linkId) {\n        var authSelector = linkId + \" .potentialidplist a[title=\\\"\" + params.strbutton + \"\\\"]\";\n        var MagicLink = \"\";\n        if (authSelector) {\n            MagicLink = document.querySelectorAll(authSelector)[0];\n            if (MagicLink === undefined) {\n                authSelector = linkId + \" .login-identityproviders a\";\n                var MagicLinks = document.querySelectorAll(authSelector);\n                if (MagicLinks.length) {\n                    MagicLinks.forEach(function(item) {\n                        var inner = item.innerHTML.trim();\n                        if (inner == params.strbutton) {\n                            MagicLink = item;\n                        }\n                    });\n                }\n            }\n        }\n        return MagicLink;\n    };\n\n    AuthMagic.prototype.magicLoginHook = function(params) {\n        var self = this;\n        var linkId = \"#page-login-index\";\n        var MagicLink = self.getMagicLink(params, linkId);\n        if (MagicLink) {\n            self.magicLoginHandler(MagicLink, \"form#login #username\");\n        }\n    };\n\n    AuthMagic.prototype.magicLoginHandler = function(MagicLink, mailHandler) {\n        MagicLink.addEventListener(\"click\", function(e) {\n            e.preventDefault();\n\n            var returnurl = e.currentTarget.getAttribute(\"href\");\n            var userValue = \"\";\n            //form#login #username\n            var mailSelector = document.querySelectorAll(mailHandler)[0];\n            if (mailSelector) {\n                userValue = mailSelector.value;\n            }\n\n            // Create a form.\n            var form = document.createElement(\"form\");\n            form.setAttribute(\"method\", \"post\");\n            form.setAttribute(\"action\", returnurl);\n            form.setAttribute(\"id\", \"magic-login-form\");\n\n                // Create an input element for Full Name\n            var magicLogin = document.createElement(\"input\");\n            magicLogin.setAttribute(\"type\", \"hidden\");\n            magicLogin.setAttribute(\"name\", \"magiclogin\");\n            magicLogin.setAttribute(\"value\", 1);\n\n            var uservalue = document.createElement(\"input\");\n            uservalue.setAttribute(\"type\", \"hidden\");\n            uservalue.setAttribute(\"name\", \"uservalue\");\n            uservalue.setAttribute(\"value\", userValue);\n\n            form.appendChild(magicLogin);\n            form.appendChild(uservalue);\n\n            MagicLink.parentNode.appendChild(form);\n\n            var magicForm = document.querySelectorAll(\"form#magic-login-form\")[0];\n            magicForm.submit();\n        });\n    };\n\n\n    return {\n        init: function(params) {\n            return new AuthMagic(params);\n        }\n    };\n\n});\n"],"names":["define","AuthMagic","params","loginhook","this","magicLoginHook","prototype","getMagicLink","linkId","authSelector","strbutton","MagicLink","undefined","document","querySelectorAll","MagicLinks","length","forEach","item","innerHTML","trim","magicLoginHandler","mailHandler","addEventListener","e","preventDefault","returnurl","currentTarget","getAttribute","userValue","mailSelector","value","form","createElement","setAttribute","magicLogin","uservalue","appendChild","parentNode","submit","init"],"mappings":";;;;;;AAsBAA,8BAAO,IAAI,eAMHC,UAAY,SAASC,eAEjBA,OAAOC,WADAC,KAEFC,eAAeH,SAEjB,UAIXD,UAAUK,UAAUC,aAAe,SAASL,OAAQM,YAC5CC,aAAeD,OAAS,+BAAkCN,OAAOQ,UAAY,KAC7EC,UAAY,MACZF,mBAEkBG,KADlBD,UAAYE,SAASC,iBAAiBL,cAAc,IACvB,CACzBA,aAAeD,OAAS,kCACpBO,WAAaF,SAASC,iBAAiBL,cACvCM,WAAWC,QACXD,WAAWE,SAAQ,SAASC,MACZA,KAAKC,UAAUC,QACdlB,OAAOQ,YAChBC,UAAYO,gBAMzBP,WAGXV,UAAUK,UAAUD,eAAiB,SAASH,YAGtCS,UAFOP,KAEUG,aAAaL,OADrB,qBAETS,WAHOP,KAIFiB,kBAAkBV,UAAW,yBAI1CV,UAAUK,UAAUe,kBAAoB,SAASV,UAAWW,aACxDX,UAAUY,iBAAiB,SAAS,SAASC,GACzCA,EAAEC,qBAEEC,UAAYF,EAAEG,cAAcC,aAAa,QACzCC,UAAY,GAEZC,aAAejB,SAASC,iBAAiBQ,aAAa,GACtDQ,eACAD,UAAYC,aAAaC,WAIzBC,KAAOnB,SAASoB,cAAc,QAClCD,KAAKE,aAAa,SAAU,QAC5BF,KAAKE,aAAa,SAAUR,WAC5BM,KAAKE,aAAa,KAAM,wBAGpBC,WAAatB,SAASoB,cAAc,SACxCE,WAAWD,aAAa,OAAQ,UAChCC,WAAWD,aAAa,OAAQ,cAChCC,WAAWD,aAAa,QAAS,OAE7BE,UAAYvB,SAASoB,cAAc,SACvCG,UAAUF,aAAa,OAAQ,UAC/BE,UAAUF,aAAa,OAAQ,aAC/BE,UAAUF,aAAa,QAASL,WAEhCG,KAAKK,YAAYF,YACjBH,KAAKK,YAAYD,WAEjBzB,UAAU2B,WAAWD,YAAYL,MAEjBnB,SAASC,iBAAiB,yBAAyB,GACzDyB,aAKX,CACHC,KAAM,SAAStC,eACJ,IAAID,UAAUC"}